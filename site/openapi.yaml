openapi: 3.0.3
info:
  title: Interface Exception Collector Service API
  description: |
    Centralized collection and management of interface exceptions from all BioPro interface services.
    
    This service provides REST APIs for:
    - Querying and filtering interface exceptions
    - Retrieving detailed exception information with original payloads
    - Executing retry operations for failed requests
    - Managing exception lifecycle and status updates
  version: 1.0.0
  contact:
    name: BioPro Architecture Team
    email: architecture@arcone.com
servers:
  - url: https://api.biopro.arcone.com/exception-collector/v1
    description: Production Environment
  - url: https://api-staging.biopro.arcone.com/exception-collector/v1
    description: Staging Environment
  - url: http://localhost:8080/api/v1
    description: Local Development

security:
  - BearerAuth: []

paths:
  /exceptions:
    get:
      summary: List Interface Exceptions
      description: Retrieve a paginated list of interface exceptions with optional filtering
      operationId: listExceptions
      parameters:
        - name: interfaceType
          in: query
          description: Filter by interface type
          schema:
            $ref: '#/components/schemas/InterfaceType'
        - name: status
          in: query
          description: Filter by exception status
          schema:
            $ref: '#/components/schemas/ExceptionStatus'
        - name: severity
          in: query
          description: Filter by exception severity
          schema:
            $ref: '#/components/schemas/ExceptionSeverity'
        - name: fromDate
          in: query
          description: Filter exceptions from this date (ISO 8601)
          schema:
            type: string
            format: date
            example: "2025-08-01"
        - name: toDate
          in: query
          description: Filter exceptions to this date (ISO 8601)
          schema:
            type: string
            format: date
            example: "2025-08-31"
        - name: customerId
          in: query
          description: Filter by customer ID
          schema:
            type: string
            example: "CUST001"
        - name: page
          in: query
          description: Page number (0-based)
          schema:
            type: integer
            minimum: 0
            default: 0
        - name: size
          in: query
          description: Page size
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: sort
          in: query
          description: Sort field and direction
          schema:
            type: string
            default: "timestamp,desc"
            example: "timestamp,desc"
      responses:
        '200':
          description: Successful response with paginated exceptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedExceptionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /exceptions/{transactionId}:
    get:
      summary: Get Exception Details
      description: Retrieve detailed information for a specific exception including original payload
      operationId: getExceptionDetails
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Unique transaction identifier
          schema:
            type: string
            format: uuid
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: includePayload
          in: query
          description: Whether to include original payload in response
          schema:
            type: boolean
            default: true
        - name: includeOrderData
          in: query
          description: Whether to include complete order data retrieved from Partner Order Service or mock server
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Exception details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedExceptionResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /exceptions/{transactionId}/retry:
    post:
      summary: Retry Failed Request
      description: Initiate retry of a failed interface request using original payload
      operationId: retryException
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Transaction ID of the exception to retry
          schema:
            type: string
            format: uuid
      requestBody:
        description: Retry request parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryRequest'
      responses:
        '202':
          description: Retry initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Exception cannot be retried
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /exceptions/{transactionId}/acknowledge:
    put:
      summary: Acknowledge Exception
      description: Mark an exception as acknowledged by operations team
      operationId: acknowledgeException
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeRequest'
      responses:
        '200':
          description: Exception acknowledged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcknowledgeResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /exceptions/summary:
    get:
      summary: Get Exception Summary
      description: Retrieve aggregated exception statistics for dashboard widgets
      operationId: getExceptionSummary
      parameters:
        - name: timeRange
          in: query
          description: Time range for summary statistics
          schema:
            type: string
            enum: [today, week, month, quarter]
            default: today
        - name: groupBy
          in: query
          description: Group statistics by field
          schema:
            type: string
            enum: [interfaceType, severity, status]
            default: interfaceType
      responses:
        '200':
          description: Exception summary statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionSummary'

  /exceptions/search:
    get:
      summary: Search Exceptions
      description: Full-text search across exception data
      operationId: searchExceptions
      parameters:
        - name: query
          in: query
          required: true
          description: Search query string
          schema:
            type: string
            example: "Order already exists"
        - name: fields
          in: query
          description: Fields to search in
          schema:
            type: array
            items:
              type: string
              enum: [exceptionReason, externalId, operation]
            default: [exceptionReason]
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedExceptionResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    InterfaceType:
      type: string
      enum: [ORDER, COLLECTION, DISTRIBUTION, RECRUITMENT]
      description: Type of interface service

    ExceptionStatus:
      type: string
      enum: [NEW, ACKNOWLEDGED, RETRIED_SUCCESS, RETRIED_FAILED, ESCALATED, RESOLVED, CLOSED]
      description: Current status of the exception

    ExceptionSeverity:
      type: string
      enum: [LOW, MEDIUM, HIGH, CRITICAL]
      description: Severity level of the exception

    ExceptionCategory:
      type: string
      enum: [BUSINESS_RULE, VALIDATION, SYSTEM_ERROR, INTEGRATION, AUTHORIZATION]
      description: Category of the exception

    Operation:
      type: string
      enum: [CREATE_ORDER, MODIFY_ORDER, CANCEL_ORDER, CREATE_COLLECTION, MODIFY_COLLECTION, CREATE_DISTRIBUTION, MODIFY_DISTRIBUTION]
      description: Operation that caused the exception

    ExceptionSummary:
      type: object
      properties:
        totalExceptions:
          type: integer
          description: Total number of exceptions in time range
        byInterfaceType:
          type: object
          additionalProperties:
            type: integer
          example:
            ORDER: 45
            COLLECTION: 12
            DISTRIBUTION: 8
        bySeverity:
          type: object
          additionalProperties:
            type: integer
          example:
            HIGH: 15
            MEDIUM: 35
            LOW: 15
        byStatus:
          type: object
          additionalProperties:
            type: integer
          example:
            NEW: 25
            RESOLVED: 35
            RETRIED_SUCCESS: 5
        trends:
          type: object
          properties:
            dailyCount:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  count:
                    type: integer

    InterfaceException:
      type: object
      required:
        - id
        - transactionId
        - interfaceType
        - exceptionReason
        - operation
        - status
        - severity
        - timestamp
      properties:
        id:
          type: integer
          format: int64
          description: Unique exception ID
        transactionId:
          type: string
          format: uuid
          description: Transaction ID from source system
        interfaceType:
          $ref: '#/components/schemas/InterfaceType'
        exceptionReason:
          type: string
          description: Human-readable error description
          example: "Order already exists for external ID ABC123"
        operation:
          $ref: '#/components/schemas/Operation'
        externalId:
          type: string
          description: Customer's external reference ID
          example: "ORDER-ABC123"
        status:
          $ref: '#/components/schemas/ExceptionStatus'
        severity:
          $ref: '#/components/schemas/ExceptionSeverity'
        category:
          $ref: '#/components/schemas/ExceptionCategory'
        retryable:
          type: boolean
          description: Whether this exception can be retried
        customerId:
          type: string
          description: Customer identifier
          example: "CUST001"
        timestamp:
          type: string
          format: date-time
          description: When the exception occurred
        processedAt:
          type: string
          format: date-time
          description: When the exception was captured by collector
        resolvedAt:
          type: string
          format: date-time
          description: When the exception was resolved
          nullable: true
        retryCount:
          type: integer
          description: Number of retry attempts
          minimum: 0
        lastRetryAt:
          type: string
          format: date-time
          description: Timestamp of last retry attempt
          nullable: true
        hasOrderData:
          type: boolean
          description: Whether order data is available for this exception

    DetailedExceptionResponse:
      allOf:
        - $ref: '#/components/schemas/InterfaceException'
        - type: object
          properties:
            originalPayload:
              type: object
              description: Original customer request payload
              nullable: true
            orderReceived:
              type: object
              description: Complete order data retrieved from Partner Order Service or mock server (if available and requested)
              nullable: true
            orderRetrievalAttempted:
              type: boolean
              description: Whether order data retrieval was attempted
            orderRetrievalError:
              type: string
              description: Error message if order retrieval failed
              nullable: true
            orderRetrievedAt:
              type: string
              format: date-time
              description: When order data was successfully retrieved
              nullable: true
            retryHistory:
              type: array
              items:
                $ref: '#/components/schemas/RetryAttempt'
            relatedExceptions:
              type: array
              items:
                $ref: '#/components/schemas/InterfaceException'
              description: Related exceptions for the same customer/order

    RetryAttempt:
      type: object
      properties:
        id:
          type: integer
          format: int64
        attemptNumber:
          type: integer
          minimum: 1
        status:
          type: string
          enum: [PENDING, SUCCESS, FAILED]
        initiatedBy:
          type: string
          description: User or system that initiated retry
        initiatedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
          nullable: true
        result:
          type: object
          properties:
            success:
              type: boolean
            message:
              type: string
            responseCode:
              type: integer
            errorDetails:
              type: object

    PagedExceptionResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InterfaceException'
        page:
          type: object
          properties:
            number:
              type: integer
            size:
              type: integer
            totalElements:
              type: integer
            totalPages:
              type: integer
            first:
              type: boolean
            last:
              type: boolean

    RetryRequest:
      type: object
      properties:
        reason:
          type: string
          description: Reason for retry
          example: "Customer requested retry after data correction"
        priority:
          type: string
          enum: [LOW, NORMAL, HIGH]
          default: NORMAL
        notifyOnCompletion:
          type: boolean
          default: false

    RetryResponse:
      type: object
      properties:
        retryId:
          type: integer
          format: int64
        status:
          type: string
          enum: [ACCEPTED, PENDING]
        message:
          type: string
          example: "Retry initiated successfully"
        estimatedCompletionTime:
          type: string
          format: date-time

    AcknowledgeRequest:
      type: object
      properties:
        acknowledgedBy:
          type: string
          description: User acknowledging the exception
        notes:
          type: string
          description: Optional notes about the acknowledgment

    AcknowledgeResponse:
      type: object
      properties:
        status:
          type: string
          enum: [ACKNOWLEDGED]
        acknowledgedAt:
          type: string
          format: date-time
        acknowledgedBy:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        timestamp:
          type: string
          format: date-time
        path:
          type: string
          description: Request path that caused the error
        details:
          type: object
          description: Additional error details

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Exception not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'