spring:
  application:
    name: partner-order-service
  
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:partner_order_db}?sslmode=disable
    username: ${DB_USERNAME:partner_order_user}
    password: ${DB_PASSWORD:partner_order_pass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
          batch_size: 10
        order_inserts: true
        order_updates: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public
    table: flyway_schema_history
    validate-on-migrate: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
        acks: all
        retries: 3
        batch.size: 16384
        linger.ms: 1
        buffer.memory: 33554432
    consumer:
      group-id: partner-order-service
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.arcone.biopro.partner.order.domain.event"
        auto.offset.reset: earliest
        enable.auto.commit: false
      listener:
        ack-mode: manual_immediate

server:
  port: ${SERVER_PORT:8090}
  shutdown: graceful
  tomcat:
    threads:
      max: 50
      min-spare: 5
    connection-timeout: 20000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    kafka:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 10s
    tags:
      application: partner-order-service
      environment: ${SPRING_PROFILES_ACTIVE:local}
      version: ${BUILD_VERSION:1.0.0-SNAPSHOT}

logging:
  level:
    com.arcone.biopro.partner.order: ${LOG_LEVEL_APP:INFO}
    org.springframework.kafka: ${LOG_LEVEL_KAFKA:WARN}
    org.springframework.web: ${LOG_LEVEL_WEB:INFO}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:WARN}
    org.flywaydb: ${LOG_LEVEL_FLYWAY:INFO}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{transactionId:-}] [%X{externalId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{transactionId:-}] [%X{externalId:-}] %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:./logs/partner-order-service.log}
    max-size: 50MB
    max-history: 5

app:
  kafka:
    topics:
      order-received: ${KAFKA_TOPIC_ORDER_RECEIVED:OrderRecieved}
      order-rejected: ${KAFKA_TOPIC_ORDER_REJECTED:OrderRejected}
      invalid-order: ${KAFKA_TOPIC_INVALID_ORDER:InvalidOrderEvent}
    retry:
      attempts: ${KAFKA_RETRY_ATTEMPTS:3}
      backoff-delay: ${KAFKA_RETRY_BACKOFF:1000}
  
  validation:
    schema-location: classpath:schemas/partner-order-input-schema.json
    max-payload-size: ${MAX_PAYLOAD_SIZE:1048576} # 1MB
  
  order:
    processing:
      timeout: ${ORDER_PROCESSING_TIMEOUT:30000}
      batch-size: ${ORDER_BATCH_SIZE:10}
    
  security:
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:true}
      requests-per-minute: ${RATE_LIMIT_RPM:100}
      burst-capacity: ${RATE_LIMIT_BURST:20}

# Resilience4j configuration
resilience4j:
  circuitbreaker:
    instances:
      kafka-publisher:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
  retry:
    instances:
      kafka-publisher:
        max-attempts: 3
        wait-duration: 1000ms
        exponential-backoff-multiplier: 2
  timelimiter:
    instances:
      kafka-publisher:
        timeout-duration: 10s
        cancel-running-future: true