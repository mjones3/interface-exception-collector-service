apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-topics-job
  labels:
    app: kafka-topics-job
spec:
  ttlSecondsAfterFinished: 30
  template:
    metadata:
      labels:
        app: kafka-topics-job
      annotations:
        sidecar.istio.io/inject: "false"
        proxy.istio.io/config: '{ "holdApplicationUntilProxyStarts": true }'
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-kafka
        image: confluentinc/cp-kafka:7.4.0
        command:
          - sh
          - -c
          - |
            until kafka-topics --bootstrap-server kafka:9092 --list; do
              echo "Waiting for Kafka to be ready..."
              sleep 5
            done
            echo "Kafka is ready!"
      containers:
      - name: create-topics
        image: confluentinc/cp-kafka:7.4.0
        command:
          - sh
          - -c
          - |
            # Create topics (ignore if they already exist)
            echo "Creating Kafka topics..."
            
            # Create inbound topics (from interface services)
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic OrderRejected --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic OrderCancelled --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic CollectionRejected --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic DistributionFailed --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic ValidationError --partitions 3 --replication-factor 1

            # Create outbound topics (from exception collector)
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic ExceptionCaptured --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic ExceptionResolved --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic ExceptionRetryCompleted --partitions 3 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic CriticalExceptionAlert --partitions 3 --replication-factor 1

            # Create dead letter topics
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic OrderRejected.DLT --partitions 1 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic OrderCancelled.DLT --partitions 1 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic CollectionRejected.DLT --partitions 1 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic DistributionFailed.DLT --partitions 1 --replication-factor 1
            kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic ValidationError.DLT --partitions 1 --replication-factor 1

            echo "All Kafka topics created successfully!"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "wget -qO- --post-data='' http://localhost:15020/quitquitquit"]