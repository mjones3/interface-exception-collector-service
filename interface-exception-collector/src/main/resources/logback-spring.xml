<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProfile name="!local">
        <!-- JSON logging for production environments -->
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
                <providers>
                    <timestamp>
                        <timeZone>UTC</timeZone>
                    </timestamp>
                    <version/>
                    <logLevel/>
                    <message/>
                    <mdc/>
                    <arguments/>
                    <stackTrace/>
                    <pattern>
                        <pattern>
                            {
                                "service": "interface-exception-collector-service",
                                "environment": "${ENVIRONMENT:-local}",
                                "version": "${BUILD_VERSION:-1.0.0-SNAPSHOT}"
                            }
                        </pattern>
                    </pattern>
                </providers>
            </encoder>
        </appender>
    </springProfile>

    <springProfile name="local">
        <!-- Human-readable logging for local development -->
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{correlationId:-}] [%X{transactionId:-}] [%X{interfaceType:-}] %logger{36} - %msg%n</pattern>
            </encoder>
        </appender>
    </springProfile>

    <!-- File appender for all environments -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logs/interface-exception-collector.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>logs/interface-exception-collector.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <version/>
                <logLevel/>
                <message/>
                <mdc/>
                <arguments/>
                <stackTrace/>
                <pattern>
                    <pattern>
                        {
                            "service": "interface-exception-collector-service",
                            "environment": "${ENVIRONMENT:-local}",
                            "version": "${BUILD_VERSION:-1.0.0-SNAPSHOT}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- Async appender for better performance -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="FILE"/>
        <queueSize>1024</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <includeCallerData>true</includeCallerData>
    </appender>

    <!-- Root logger -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </root>

    <!-- Application specific loggers -->
    <logger name="com.arcone.biopro.exception.collector" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </logger>

    <!-- GraphQL specific loggers -->
    <logger name="com.arcone.biopro.exception.collector.api.graphql" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </logger>
    
    <!-- GraphQL logging instrumentation - detailed logging -->
    <logger name="com.arcone.biopro.exception.collector.api.graphql.logging" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </logger>
    
    <!-- GraphQL monitoring and alerting - important for operations -->
    <logger name="com.arcone.biopro.exception.collector.api.graphql.monitoring" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </logger>
    
    <!-- GraphQL security audit logging - critical for security -->
    <logger name="com.arcone.biopro.exception.collector.api.graphql.security" level="INFO" additivity="false">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="ASYNC_FILE"/>
    </logger>

    <!-- Spring GraphQL framework loggers -->
    <logger name="org.springframework.graphql" level="INFO"/>
    <logger name="graphql.execution" level="INFO"/>
    <logger name="graphql.GraphQL" level="INFO"/>

    <!-- Kafka loggers -->
    <logger name="org.apache.kafka" level="WARN"/>
    <logger name="org.springframework.kafka" level="WARN"/>
    <logger name="org.springframework.kafka.listener.KafkaMessageListenerContainer" level="WARN"/>

    <!-- Database loggers -->
    <logger name="org.hibernate.SQL" level="DEBUG"/>
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE"/>
    <logger name="org.flywaydb" level="INFO"/>

    <!-- Metrics and health loggers -->
    <logger name="io.micrometer" level="INFO"/>
    <logger name="org.springframework.boot.actuator" level="INFO"/>

    <!-- Circuit breaker loggers -->
    <logger name="io.github.resilience4j" level="DEBUG"/>

    <!-- Security loggers -->
    <logger name="org.springframework.security" level="INFO"/>

    <!-- Suppress noisy loggers -->
    <logger name="org.springframework.web.servlet.DispatcherServlet" level="WARN"/>
    <logger name="org.springframework.boot.actuator.endpoint.web" level="WARN"/>
</configuration>