# JVM Configuration for Production GraphQL Performance
# This file contains JVM tuning parameters optimized for GraphQL workloads

# Memory Configuration
-Xms2g
-Xmx4g
-XX:NewRatio=1
-XX:SurvivorRatio=8
-XX:MaxMetaspaceSize=512m
-XX:CompressedClassSpaceSize=128m

# Garbage Collection Configuration (G1GC optimized for low latency)
-XX:+UseG1GC
-XX:MaxGCPauseMillis=100
-XX:G1HeapRegionSize=16m
-XX:G1NewSizePercent=30
-XX:G1MaxNewSizePercent=40
-XX:G1MixedGCCountTarget=8
-XX:InitiatingHeapOccupancyPercent=45
-XX:G1MixedGCLiveThresholdPercent=85
-XX:G1HeapWastePercent=5

# Performance Optimizations
-XX:+UseStringDeduplication
-XX:+OptimizeStringConcat
-XX:+UseCompressedOops
-XX:+UseCompressedClassPointers
-XX:+TieredCompilation
-XX:TieredStopAtLevel=4
-XX:+UseCodeCacheFlushing
-XX:ReservedCodeCacheSize=256m
-XX:InitialCodeCacheSize=64m

# GraphQL Specific Optimizations
-XX:+UseFastAccessorMethods
-XX:+UseFastEmptyMethods
-XX:+AggressiveOpts
-XX:+DoEscapeAnalysis
-XX:+EliminateAllocations
-XX:+EliminateLocks
-XX:+OptimizeFill

# Network and I/O Optimizations
-Djava.net.preferIPv4Stack=true
-Djava.awt.headless=true
-Dfile.encoding=UTF-8
-Duser.timezone=UTC

# Security Configuration
-Djava.security.egd=file:/dev/./urandom
-XX:+UnlockExperimentalVMOptions
-XX:+UseCGroupMemoryLimitForHeap

# Monitoring and Debugging (Production)
-XX:+PrintGC
-XX:+PrintGCDetails
-XX:+PrintGCTimeStamps
-XX:+PrintGCApplicationStoppedTime
-XX:+PrintStringDeduplicationStatistics
-Xloggc:/var/log/gc/gc-%t.log
-XX:+UseGCLogFileRotation
-XX:NumberOfGCLogFiles=5
-XX:GCLogFileSize=100M

# JFR Configuration for Production Monitoring
-XX:+FlightRecorder
-XX:StartFlightRecording=duration=0s,filename=/var/log/jfr/app-recording.jfr,settings=profile
-XX:FlightRecorderOptions=repository=/var/log/jfr,maxchunksize=32m

# Error Handling
-XX:+HeapDumpOnOutOfMemoryError
-XX:HeapDumpPath=/var/log/heapdumps/
-XX:OnOutOfMemoryError="kill -9 %p"

# Spring Boot Specific
-Dspring.profiles.active=prod
-Dspring.jmx.enabled=true
-Dmanagement.endpoints.jmx.exposure.include=*

# GraphQL Performance Tuning
-Dgraphql.execution.async=true
-Dgraphql.query.timeout=30000
-Dgraphql.complexity.maximum=1000
-Dgraphql.depth.maximum=10

# Connection Pool Tuning
-Dhikari.maximumPoolSize=50
-Dhikari.minimumIdle=10
-Dhikari.connectionTimeout=20000
-Dhikari.idleTimeout=300000
-Dhikari.maxLifetime=1200000

# Redis Connection Tuning
-Dredis.lettuce.pool.maxActive=20
-Dredis.lettuce.pool.maxIdle=10
-Dredis.lettuce.pool.minIdle=5
-Dredis.timeout=3000

# Kafka Performance Tuning
-Dkafka.consumer.maxPollRecords=500
-Dkafka.consumer.fetchMinBytes=1024
-Dkafka.consumer.fetchMaxWait=500
-Dkafka.producer.batchSize=16384
-Dkafka.producer.lingerMs=5
-Dkafka.producer.compressionType=lz4

# WebSocket Configuration
-Dwebsocket.maxConnections=2000
-Dwebsocket.connectionTimeout=60000
-Dwebsocket.heartbeatInterval=30000