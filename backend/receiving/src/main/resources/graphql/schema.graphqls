scalar DateTime
scalar Date
scalar JSON

type Query {
    findAllLookupsByType(type: String!): [LookupDTO]!
    enterShippingInformation(enterShippingInformationRequest:EnterShippingInformationRequestDTO!): UseCaseResponseDTO!
    validateDevice(validateDeviceRequest:ValidateDeviceRequestDTO!): UseCaseResponseDTO!
    validateTemperature(validateTemperatureRequest:ValidateTemperatureRequestDTO!): UseCaseResponseDTO!
    validateTransitTime(validateTransitTimeRequest:ValidateTransitTimeRequestDTO!): UseCaseResponseDTO!
}

type Mutation {
    createImport(createImportRequest:CreateImportRequestDTO!): UseCaseResponseDTO!

}

input InputQuerySortDTO {
    orderByList: [InputQueryOrderByDTO]
}

type OutputQuerySortDTO {
    orderByList: [OutputQueryOrderByDTO]
}

input InputQueryOrderByDTO {
    property:String
    direction:String
}

input EnterShippingInformationRequestDTO {
    productCategory:String!
    employeeId:String!
    locationCode:String!
}

input ValidateDeviceRequestDTO {
    bloodCenterId:String!
    locationCode:String!
}

input ValidateTemperatureRequestDTO{
    temperature:Float!
    temperatureCategory:String!
}

input ValidateTransitTimeRequestDTO {
    temperatureCategory:String!
    startDateTime:DateTime!
    startTimeZone:String!
    endDateTime:DateTime!
    endTimeZone:String!
}

input CreateImportRequestDTO {
    temperatureCategory:String!
    transitStartDateTime:DateTime
    transitStartTimeZone:String
    transitEndDateTime:DateTime
    transitEndTimeZone:String
    temperature:Float
    thermometerCode:String
    locationCode:String!
    comments:String
    employeeId:String!
}

type UseCaseNotificationDTO {
    message: String
    type: String
    code: Int
    action:String
    reason:String
    details:[String]
    name: String
}

type UseCaseResponseDTO {
    notifications: [UseCaseNotificationDTO]
    _links: JSON
    data: JSON
}

type OutputQueryOrderByDTO {
    property:String
    direction:String
}

type PageDTO {
    content: JSON
    pageNumber: Int!
    pageSize: Int!
    totalRecords: Int!
    querySort: OutputQuerySortDTO!
    hasPrevious: Boolean!
    hasNext: Boolean!
    isFirst: Boolean!
    isLast: Boolean!
    totalPages: Int!
}

type LookupDTO {
    id: Int!
    type: String!
    optionValue: String!
    descriptionKey: String!
    orderNumber: Int!
    active: Boolean!
}
