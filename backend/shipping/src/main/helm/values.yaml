# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: artifactory.sha.ao.arc-one.com/docker/biopro/backend/shipping
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Add default environment for the service
environment: "dev"

# Add default domain for the service
domain: "api.local.gd"

# Disable Atlas as default
atlas:
  enabled: false
  blockDropSchema: true
  blockDestructiveChanges: true

# Enable Istio as default
istio:
  enabled: true
  gateway: rsa-gateway
  services:
    - uri:
        prefix: /shipping/graphql
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels:
  # Enable Keycloak secured service
  app-secured: enabled

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# Define the service type
# with the default port 8080
service:
  type: ClusterIP
  port: 8080

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi
resources:
  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# Add default environment variables for the service
defaultEnv:
  - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
    valueFrom:
      secretKeyRef:
        name: kafka-secret
        key: url
  - name: SPRING_R2DBC_URL
    valueFrom:
      secretKeyRef:
        name: shipping-database-secret
        key: url
  - name: SPRING_R2DBC_USERNAME
    valueFrom:
      secretKeyRef:
        name: shipping-database-secret
        key: username
  - name: SPRING_R2DBC_PASSWORD
    valueFrom:
      secretKeyRef:
        name: shipping-database-secret
        key: password
  - name: SPRING_KAFKA_SECURITY_PROTOCOL
    value: "SSL"

additionalEnv: []

# Define the readiness and liveness probes for the service
# with the default path /management/health/readiness and /management/health/liveness
readinessProbe:
  httpGet:
    path: /management/health/readiness
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 15
  failureThreshold: 6
livenessProbe:
  httpGet:
    path: /management/health/liveness
    port: 8080
  initialDelaySeconds: 120

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
