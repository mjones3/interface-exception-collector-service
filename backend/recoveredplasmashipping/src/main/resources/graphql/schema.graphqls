scalar DateTime
scalar Date
scalar JSON

type Query {
    # Searches over all Customers
    findAllCustomers: [CustomerDTO]!
    findAllLocations:[LocationDTO]!
    findAllLookupsByType(type: String!): [LookupDTO]!
    findAllProductTypeByCustomer(customerCode:String!):[ProductTypeDTO]!
    searchShipment(recoveredPlasmaShipmentQueryCommandRequestDTO:RecoveredPlasmaShipmentQueryCommandRequestDTO): UseCaseResponseDTO!
}

type Mutation {
    createShipment(createShipmentRequest:CreateShipmentRequestDTO!): UseCaseResponseDTO!
}

input InputQuerySortDTO {
    orderByList: [InputQueryOrderByDTO]
}

input CreateShipmentRequestDTO {
    locationCode:String
    customerCode:String
    productType:String
    transportationReferenceNumber:String
    shipmentDate:Date
    cartonTareWeight:Float
    createEmployeeId:String
}

input RecoveredPlasmaShipmentQueryCommandRequestDTO {

    locationCode:[String],
    shipmentNumber:String,
    shipmentStatus:[String],
    customers:[String],
    productTypes:[String],
    shipmentDateFrom:Date,
    shipmentDateTo:Date,
    querySort:InputQuerySortDTO,
    pageNumber:Int,
    pageSize:Int
}

input RecoveredPlasmaShipmentQueryCommandRequestDTO {

    locationCode:[String],
    shipmentNumber:String,
    shipmentStatus:[String],
    customers:[String],
    productTypes:[String],
    shipmentDateFrom:Date,
    shipmentDateTo:Date,
    querySort:InputQuerySortDTO,
    pageNumber:Int,
    pageSize:Int
}

type OutputQuerySortDTO {
    orderByList: [OutputQueryOrderByDTO]
}

input InputQueryOrderByDTO {
    property:String
    direction:String
}

type OutputQueryOrderByDTO {
    property:String
    direction:String
}

type PageDTO {
    content: JSON
    pageNumber: Int!
    pageSize: Int!
    totalRecords: Int!
    querySort: OutputQuerySortDTO!
    hasPrevious: Boolean!
    hasNext: Boolean!
    isFirst: Boolean!
    isLast: Boolean!
    totalPages: Int!
}

type UseCaseNotificationDTO {
    message: String
    type: String
    code: Int
}

type LocationDTO {
    id:ID!
    name:String!
    code:String!
    externalId:String
    addressLine1:String
    addressLine2:String
    postalCode:String
    city:String
    state:String
    properties:JSON
}

type CustomerDTO {
    id:ID!
    externalId:String
    customerType:String
    name:String
    code:String
    departmentCode:String
    departmentName:String
    foreignFlag:String
    phoneNumber:String
    contactName:String
    state:String
    postalCode:String
    country:String
    countryCode:String
    city:String
    district:String
    addressLine1:String
    addressLine2:String
    active:Boolean
    createDate:DateTime
    modificationDate:DateTime
}

type LookupDTO {
    id: Int!
    type: String!
    optionValue: String!
    descriptionKey: String!
    orderNumber: Int!
    active: Boolean!
}

type UseCaseResponseDTO {
    notifications: [UseCaseNotificationDTO]
    _links: JSON
    data: JSON
}

type ProductTypeDTO{
    id:ID!
    productType:String
    productTypeDescription:String
}
