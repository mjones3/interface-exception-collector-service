# Development Dockerfile with hot reload capabilities
FROM maven:3.9.9-eclipse-temurin-17 AS development

# Install development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    netcat-openbsd \
    bash \
    && rm -rf /var/lib/apt/lists/* \
    && groupadd -g 1001 appgroup \
    && useradd -u 1001 -g appgroup -s /bin/bash -m appuser

# Set working directory
WORKDIR /app

# Copy pom.xml and download dependencies first (for better caching)
COPY pom.xml .

# Download dependencies and cache them
RUN mvn dependency:go-offline -B && \
    mvn dependency:copy-dependencies -DoutputDirectory=target/lib -DincludeScope=runtime

# Copy source code
COPY src ./src
COPY target/classes ./target/classes

# Create necessary directories
RUN mkdir -p target/classes target/lib

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Configure JVM for development with more memory and better GC
ENV JAVA_OPTS="-XX:+UseContainerSupport \
               -XX:MaxRAMPercentage=70.0 \
               -XX:+UseG1GC \
               -XX:G1HeapRegionSize=16m \
               -XX:+UseStringDeduplication \
               -Djava.security.egd=file:/dev/./urandom \
               -Dspring.profiles.active=local \
               -Dspring.devtools.restart.enabled=false \
               -Dspring.devtools.livereload.enabled=false"

# Expose application port
EXPOSE 8080 5005

# Configure graceful shutdown
STOPSIGNAL SIGTERM

# Use java -jar instead of mvn spring-boot:run for better performance
ENTRYPOINT ["sh", "-c", "echo 'Starting application with pre-compiled classes...' && \
    if [ ! -f target/lib/*.jar ]; then \
        echo 'Dependencies not found, downloading...'; \
        mvn dependency:copy-dependencies -DoutputDirectory=target/lib -DincludeScope=runtime; \
    fi && \
    mvn compile -q && \
    java $JAVA_OPTS -cp 'target/classes:target/lib/*' com.arcone.biopro.exception.collector.InterfaceExceptionCollectorApplication"]
